# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

function hyperdsl { 
a=($(pgrep "sublime" | wc -l))
if [ $a = 0 ]
then 
    echo "Opening sublime"
    sublime ~/.config/sublime-text-2/Packages/User/hyperdsl.sublime-project &
else
    echo "Sublime already open"
fi
if mount | grep /mnt/london > /dev/null; then
    echo "London already mounted"
else
    mntlon
fi

echo "sshing"
gnome-terminal --profile=elio -e "ssh -X london.stanford.edu ";exit
}

# $1 channel
# $2 appname
# $3 multifile level
# $4 retiming
function wapp {
  m=$3
  r=''
  if [[ $4 = "1" ]]; then
    r='--retiming'
  fi 
  cd ${SPATIAL_HOME}
  #make
  # make apps
  rm -rf out${1}
  cmd="bin/spatial $2 --synth --out=out${1} --naming --emission=1 --multifile=$m $r"
  echo "$cmd"
  eval "$cmd"
  cd out${1}
  waveon
  make vcs
}


# $1 channel
# $2 appname
# $3 multifile level
# $4 retiming
function vapp {
  m=$3
  r=''
  if [[ $4 = "1" ]]; then
    r='--retiming'
  fi 
  cd ${SPATIAL_HOME}
  #make
  # make apps
  rm -rf out${1}
  cmd="bin/spatial $2 --synth --out=out${1} --emission=1 --multifile=$m $r"
  echo "$cmd"
  eval "$cmd"
  cd out${1}
  make vcs
}
# Arg 1 = appname
# Arg 2 = directory or debug [dir=out, debug=false by default]
function fastapp {
cp -r ${SPATIAL_HOME}/extern/compiler/src/* ${PUB_HOME}/compiler/src/spatial/compiler;cd ${PUB_HOME}/;sbt -DshowSuppressedErrors=true compile
if [[ "$?" -ne "0" ]]; then
  echo "messed up compile"
else
  if [ ${2} = "debug" ]; then
    bin/spatial --debug ${1} | tee /tmp/fastlog
    exc=$(cat /tmp/fastlog | grep "Exception in thread" | wc -l)
    if [[ "$?" -ne "0" ]]; then
      echo "messed up spatial build"
    elif [[ $exc != 0 ]]; then
      echo "messed up spatial build"
    else
      cd ${PUB_HOME}/out
    fi
  elif [ ${2} != "" ]; then
    bin/spatial --outdir=${PUB_HOME}/${2} ${1} | tee /tmp/fastlog
    exc=$(cat /tmp/fastlog | grep "Exception in thread" | wc -l)
    if [[ "$?" -ne "0" ]]; then
      echo "messed up spatial build"
    elif [[ $exc != 0 ]]; then
      echo "messed up spatial build"
    else
      cd ${PUB_HOME}/${2}
      #make clean sim | grep --color=never -A4 "\[maxjcompiler\] [0-9]\+\. ERROR\|^[^\[]\|\[maxjcompiler\] [0-9]\+ problems"
    fi
  else
    bin/spatial ${1} | tee /tmp/fastlog
    exc=$(cat /tmp/fastlog | grep "Exception in thread" | wc -l)
    if [[ "$?" -ne "0" ]]; then
      echo "messed up spatial build"
    elif [[ $exc != 0 ]]; then
      echo "messed up spatial build"
    else
      cd ${PUB_HOME}/out
    #  remk
    fi
  fi
fi
}

function locate {
  grep -r "$1" ${PUB_HOME}
}

function env_london {
export SPATIAL_HOME='/mnt/london/macro/spatial'
export PUB_HOME='/mnt/london/macro/spatial/out'
export ARGON_HOME='/mnt/london/macro/argon'
export VIRTUALIZED_HOME='/mnt/london/macro/scala-virtualized'
}

function halide {
  cd ~/Dropbox/CS243/cs243-hw6/
  if [[ $1 = 1 ]]; then
    make part_1
    cmd="./build/filter_part_1_naive images/oak.png"
    eval "$cmd"
    display output.png
  elif [[ $1 = 2 ]]; then
    make part_2
    cmd="./build/filter_part_2_single images/oak.png"
    eval "$cmd"
    #display output.png
  else
    make part_3
    cmd="./build/filter_part_3_multi images/oak.png"
    eval "$cmd"
    #display output.png
  fi
}

# $1 = environment to open
function subl_env {
  if [[ "$1" == "lon" || "$1" == "london" ]]; then
    tp="london"
    cleanmnt
    mntlon
    londonenv
    cmd="subl /home/mattfel/sublime_projects/${tp}_generated.sublime-workspace &"
    eval "$cmd"
    cmd="subl /home/mattfel/sublime_projects/${tp}_templates.sublime-workspace &"
    eval "$cmd"
    cmd="subl /home/mattfel/sublime_projects/${tp}_spatial.sublime-workspace &"
    eval "$cmd"
  elif [[ "$1" == "local" ]]; then
    tp="local"
    cmd="subl /home/mattfel/sublime_projects/${tp}_generated.sublime-workspace &"
    eval "$cmd"
    cmd="subl /home/mattfel/sublime_projects/${tp}_templates.sublime-workspace &"
    eval "$cmd"
    cmd="subl /home/mattfel/sublime_projects/${tp}_spatial.sublime-workspace &"
    eval "$cmd"
  elif [[ "$1" == "" ]]; then
    subl
  elif [[ "$1" == "dropbox" ]]; then
    subl /home/mattfel/sublime_projects/dropbox.sublime-workspace
  else
    echo "ERROR: $1 not recognized option"
    exit 1
  fi
}

# $1 = message
# $2 = minutes from now
function remind {
 echo 'notify-send GenericReminder "$1" -t 0' | at now + $2 minutes
 #atrm <number> removes job
 

}

function appwave {
  if [ -f ${SPATIAL_HOME}/out${1}/Top.vcd ];then 
    gtkwave ${SPATIAL_HOME}/out${1}/Top.vcd; 
  else 
    gtkwave ${SPATIAL_HOME}/out${1}/DUT.vcd; 
  fi
   #$(ls -Rt ${PUB_HOME}/test_run_dir | awk '"'"'/:$/&&f{s=$0;f=0}/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}NF&&f{ print s"/"$0 }'"'"' | grep "\.vcd" | head -1)
}

function tree {
  cd ${SPATIAL_HOME}/out${1};google-chrome --new-window ${SPATIAL_HOME}/out${1}/controller_tree.html &
}

function gif() {
  ffmpeg -i $1.mkv -vf scale=640:-1 -r 10 -f image2pipe -vcodec ppm - | convert -delay 15 -loop 0 - output.gif
}

function open_ctrl {
if [ -z $1 ]; then
  echo "ERROR: No app name specified."
else
  cmd="google-chrome ~/hyperdsl/spatial/published/Spatial/controller_tree_$1.html &"
  eval "$cmd"
fi
}

alias screenoff='sudo xinput --disable "ELAN Touchscreen"'
alias screenon='sudo xinput --enable "ELAN Touchscreen"'
alias website='cd ~/Dropbox/Shared_Desktop/ResumeTex/;pdflatex ResumeMaster.tex > /dev/null;cp ResumeMaster.pdf ~/mattfel1.github.io/;cd ~/mattfel1.github.io;jekyll build;git add --all;git commit -m "test";git push'
alias cleanmnt='sudo pkill -9 -f sshfs;sudo umount -l /mnt/london;sudo umount -l /mnt/tucson;sudo umount -l /mnt/max2;sudo umount -l /mnt/myth'
alias mntmaxeler='sudo sshfs mfeldman@portal.maxeler.com:/home/mfeldman /mnt/maxeler -p 3033 -o allow_other,IdentityFile=~/.ssh/id_rsa'
alias mntmyth='sudo sshfs mattfel@myth.stanford.edu:/afs/.ir/users/m/a/mattfel /mnt/myth -o allow_other,IdentityFile=~/.ssh/id_rsa'
alias mntmax='sudo sshfs mattfel@max-2.stanford.edu:/kunle/users/mattfel /mnt/max2 -o allow_other,IdentityFile=~/.ssh/id_rsa'
alias mnttuc='sudo sshfs mattfel@tucson.stanford.edu:/home/mattfel /mnt/tucson -o allow_other,IdentityFile=~/.ssh/id_rsa'
alias mntlon='sudo sshfs mattfel@london.stanford.edu:/home/mattfel /mnt/london -o Ciphers=arcfour,allow_other,IdentityFile=~/.ssh/id_rsa'
alias mntpor='sudo sshfs mattfel@portland.stanford.edu:/home/mattfel /mnt/portland -o allow_other,IdentityFile=~/.ssh/id_rsa'
alias dot='xdot ~/dhdl/out/dot/outfile.dot &'
alias encrypt='7z a -p '
alias wifi='sudo modprobe -r rtl8723be && sudo modprobe rtl8723be'
alias ltc='~/.litecoin/bin/litecoin-qt &'
alias remake='rm -rf ~/hyperdsl/published/DHDL/apps/target/scala-2.11; rm -rf ~/hyperdsl/published/DHDL/; rm -rf ~/hyperdsl/published/DHDL/generated/; rm -rf ~/hyperdsl/published/DHDL/apps/src/;cd ~/hyperdsl/forge;bin/run -c'
alias getcost='scp max-2.stanford.edu:/kunle/users/mattfel/maxj1/CPUCode/outfile_offchip_cost*.txt ./outfile_offchip_cost.txt'
alias ipython='google-chrome-stable http://localhost:8888 && google-chrome-stable http://localhost:8888 &';
alias max2='gnome-terminal --profile=max2 -e   "ssh -X max-2.stanford.edu";exit'
alias maxeler='gnome-terminal --profile=maxeler   -e "ssh -X -p 3033 mfeldman@portal.maxeler.com";exit'
alias cyclades='gnome-terminal --profile=cyclades   -e "ssh cyclades.stanford.edu";exit'
alias converter='gnome-terminal --profile=white -e "bash -c \"wmctrl -r :ACTIVE: -b toggle,above,sticky;cd ~/dhdl; exec bash\""'
alias tucson='gnome-terminal --profile=tucson -e "ssh -X tucson.stanford.edu";exit'
alias tflop1='gnome-terminal --profile=tflop1 -e "ssh -X tflop1.stanford.edu";exit'
alias tflop2='gnome-terminal --profile=tflop2 -e "ssh -X tflop2.stanford.edu";exit'
alias london='gnome-terminal --profile=london -e "ssh -X london.stanford.edu";exit'
alias manchester='gnome-terminal --profile=manchester -e "ssh -X manchester.stanford.edu";exit'
alias pilot='gnome-terminal --profile=pilot -e "ssh -Yp1014 matt@rwc.pilot.ai";exit'
alias ottawa='gnome-terminal --profile=ottawa -e "ssh -X ottawa.stanford.edu";exit'
alias portland='gnome-terminal --profile=portland -e "ssh -X portland.stanford.edu";exit'
alias edittheme='rm ~/Downloads/*.tmTheme*;google-chrome https://tmtheme-editor.herokuapp.com;read -p "Load from this address:   /home/mattfel/.config/sublime-text-2/Packages/Color Scheme      Press enter after you edit and download to copy to prefs";cp ~/Downloads/*.tmTheme /home/mattfel/.config/sublime-text-2/Packages/Color\ Scheme\ -\ Default'
alias tick_thru='watch -n0.5 "xdotool key ctrl+a n"'
alias enter_passwd='watch -n1.5 "xdotool key ctrl+shift+v Return ctrl+a n"'
alias corn='gnome-terminal --profile=cyclades -e "ssh -X corn.stanford.edu";exit'
alias myth='gnome-terminal --profile=cyclades -e "ssh -X myth.stanford.edu";exit'
alias tucsonenv='export PUB_HOME=/mnt/tucson/spatial-lang/out;export SPATIAL_HOME=/mnt/tucson/spatial-lang'
alias londonenv='export PUB_HOME=/mnt/london/spatial-lang/out;export SPATIAL_HOME=/mnt/london/spatial-lang;TEMPLATES_HOME=/mnt/london/spatial-lang/spatial/core/resources/chiselgen/template-level'
alias templates='cd ${TEMPLATES_HOME}'
alias inferapp='grep -r "// TopModule for application:" . | sed "s/.*\/\/ TopModule for application: //g"'
alias regreminder='echo ''notify-send "Check regression and put pre-master into master if success!"'' | at now + 100 minutes'
alias ltc='/home/mattfel/mine/litecoin-0.6.3c-linux/bin/64/litecoin-qt &'
alias de1='ssh de1@de1soc'

export FORGE_HOME='/home/mattfel/hyperdsl/forge'
export DELITE_HOME='/home/mattfel/hyperdsl/delite'
export LMS_HOME='/home/mattfel/hyperdsl/virtualization-lms-core'
#export JAVA_HOME=$(readlink -f $(dirname $(readlink -f $(which java)))/../../)
#export JAVA_HOME='/usr' #/jvm/java-7-openjdk-amd64'
export HYPER_HOME='/home/mattfel/hyperdsl'
export PIR_HOME='/home/mattfel/hyperdsl/forge'
export SPATIAL_HOME='/home/mattfel/spatial-lang'
export PUB_HOME='/home/mattfel/macro/spatial/out'
export ARGON_HOME='/home/mattfel/macro/argon'
export VIRTUALIZED_HOME='/home/mattfel/macro/argon/scala-virtualized'
#export -f hyperdsl
export PATH='/usr/lib/scala/bin':$PATH:'/home/mattfel/firrtl/utils/bin'
export RISCV='/home/mattfel/rocket-chip/riscv-tools'
export TEMPLATES_HOME='/home/mattfel/macro/spatial/src/spatial/codegen/chiselgen/resources/template-level'
export VCS_HOME=/cad/synopsys/vcs/K-2015.09-SP2-7
export PATH=$VCS_HOME/amd64/bin:$PATH
export LM_LICENSE_FILE=27000@cadlic0.stanford.edu:$LM_LICENSE_FILE
alias dve='/cad/synopsys/vcs/K-2015.09-SP2-7/bin/dve -full64'
alias open='okular'
export SUNETID=mattfel
alias zc='ssh holodeck-zc706'
export PATH=$PATH:'/usr/lib/jvm/java-8-oracle/jre/lib/amd64:/opt/Xilinx/Vivado/2017.3/bin'
alias puttyde1='sudo putty /dev/ttyUSB0 -serial -sercfg 115200,8,n,1,N'
alias sshde1='ssh -X rescomp-17-351912.stanford.edu'
alias tpoff='xinput set-prop 13 "Device Enabled" 0'
alias pilot14='ssh -Yp1014 matt@rwc.pilot.ai'
alias pilot11='ssh -Yp1011 matt@rwc.pilot.ai'
alias tpon='xinput set-prop 13 "Device Enabled" 1'

function usb {
  sudo chmod 666 /dev/ttyUSB$1
}
